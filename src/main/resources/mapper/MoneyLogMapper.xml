<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyf.dao.MoneyLogDao">
    <resultMap id="BaseResultMap" type="com.xyf.entity.MoneyLog">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="money" property="money" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="from_user_id" property="fromUserId" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="add" parameterType="com.xyf.entity.MoneyLog">
        INSERT INTO `wei`.`money_log`
        (`user_id`, `money`, `status`, `type`, `from_user_id`,`time`,`pos_id`,`use_money`)
        VALUES (#{userId}, #{money}, #{status}, #{type}, #{fromUserId},now(),#{posId},#{useMoney});
    </insert>

    <insert id="addList" parameterType="java.util.List">
        INSERT INTO `wei`.`money_log`
        (`user_id`, `money`, `status`, `type`, `from_user_id`,`time`,`pos_id`,`use_money`)
        VALUES
        <foreach collection="moneyLogs" item="moneyLog" index="index" separator=",">
            (#{moneyLog.userId}, #{moneyLog.money}, #{moneyLog.status}, #{moneyLog.type}, #{moneyLog.fromUserId},now(),#{moneyLog.posId},#{moneyLog.useMoney})
        </foreach>
    </insert>

    <select id="ptList" resultType="com.xyf.entity.MoneyLog">
        SELECT
        id,user_id userId ,money,`status`,type,from_user_id fromUserId,time,pos_id posId,use_money useMoney,deal_time dealTime from money_log
        WHERE `status` = 2
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        <!--SELECT
            m.id id,
            m.user_id userId,
            m.money money,
            m.`status` STATUS,
            m.type type,
            u.username fromUserName,
            m.time time,@
            pos_id posId,
            m.use_money useMoney
        FROM
            money_log m
        LEFT JOIN USER u ON m.from_user_id = u.user_id
        WHERE
            m.user_id = 0
        AND m.`status` = 2-->
    </select>


    <select id="uhList" parameterType="com.xyf.dto.IdDTO" resultType="com.xyf.entity.MoneyLog">
         SELECT id,user_id userId ,money,`status`,type,from_user_id fromUserId,time,pos_id posId,use_money useMoney,deal_time dealTime from money_log
        WHERE `status` = 1
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        <if test="type != null">
            and type = #{type}
        </if>

        <!--SELECT
            m.id id,
            m.user_id userId,
            m.money money,
            m.`status` STATUS,
            m.type type,
            u.username fromUserName,
            m.time time,
            pos_id posId,
            m.use_money useMoney
        FROM
            money_log m LEFT JOIN USER u ON m.from_user_id = u.user_id
        WHERE
            m.user_id = #{userId}
        AND m.`status` = '1'-->
    </select>


    <select id="yhUseCard" parameterType="com.xyf.dto.IdDTO" resultType="com.xyf.vo.YHUseCardVO">
        SELECT m.id,m.user_id userId ,m.money,m.status,m.type,m.from_user_id fromUserId,m.time,p.pos_name posName,m.use_money useMoney ,m.deal_time dealTime from
        money_log m LEFT JOIN posji p on m.pos_id = p.pos_id where type = 3 and user_id = #{userId}
    </select>

    <select id="sjuy" parameterType="java.lang.String" resultType="java.lang.Double">

    </select>

    <insert id="inserList" parameterType="java.util.List">
        INSERT INTO `wei`.`money_log`
        (`user_id`, `money`, `status`, `type`, `from_user_id`,`time`,`pos_id`,`use_money`,`deal_time`)
        VALUES
        <foreach collection="logs" item="moneyLog" index="index" separator=",">
            (#{moneyLog.userId}, #{moneyLog.money}, #{moneyLog.status}, #{moneyLog.type}, #{moneyLog.fromUserId},now(),#{moneyLog.posId},#{moneyLog.useMoney},#{moneyLog.dealTime})
        </foreach>
    </insert>
</mapper>